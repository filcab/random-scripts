#!/usr/bin/env zsh

#Verb=echo

CHECK=
case "$1" in
  check|--check)
    CHECK=check
    ;;
esac

# For now, projects and tools will only be updated if they're in git and
# at the CWD.
projects=(libcxxabi libcxx libunwind compiler-rt dragonegg clang-tools-extra)
tools=(polly clang llgo lld lldb)

dirs=(. tools/{clang{,/tools/extra},lld,lldb} projects/{libcxx{,abi},compiler-rt})
svn_dirs=(tools/clang/test/debuginfo-tests)

FAIL=0
# llvm is not in projects nor tools. Add it to our list of dirs
for dir in ${dirs[@]} llvm ${projects[@]} ${tools[@]}; do
  [ -d $dir ] || continue
  # Skip . if we're on a dir with all llvm projects/tools' directories
  if [[ "." == $dir ]] && [ ! -d ".git" ]; then
    continue
  fi
  if [ -z "$CHECK" ]; then
    (cd $dir && $Verb git fetch origin)
  else
    echo $dir
    (cd $dir && $Verb git fsck --full)
    if [[ "$?" -ne 0 ]]; then
      FAIL=1
    fi
  fi
done

# We're not checking. Rebase everything
if [ -z "$CHECK" ]; then
  for dir in ${dirs[@]} llvm ${projects[@]} ${tools[@]}; do
    [ -d $dir ] || continue
    # Skip . if we're on a dir with all llvm projects/tools' directories
    if [[ "." == $dir ]] && [ ! -d ".git" ]; then
      continue
    fi

    (cd $dir && echo $dir &&
      $Verb git checkout master &&
      $Verb git svn rebase -l)
  done
fi

for dir in $svn_dirs; do
  [ -d $dir ] || continue
  if [ -z "$CHECK" ]; then
    (cd $dir && echo $dir; pwd; $Verb svn update)
  else
    (cd $dir && echo $dir; pwd; $Verb svn cleanup)
  fi
done

exit $FAIL
